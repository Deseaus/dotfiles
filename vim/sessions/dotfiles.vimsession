let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +21 Documents/Courses/MLT/8_Machine_Learning/Assignment\ 1/funtag.py
badd +109 Documents/Courses/MLT/8_Machine_Learning/Assignment\ 2/ml_lecture3.py
badd +50 Documents/Courses/MLT/8_Machine_Learning/Assignment\ 2/experiment.py
badd +116 Documents/Courses/MLT/8_Machine_Learning/Assignment\ 3/sequence_tagger.py
badd +200 Documents/Courses/MLT/8_Machine_Learning/Assignment\ 3/structured_perceptron.py
badd +46 dotfiles/general.zsh
badd +1 dotfiles/shortcuts.zsh
badd +1 dotfiles/functions.zsh
badd +1 dotfiles/README.md
badd +186 dotfiles/vimrc
badd +1 dotfiles/zshrc
badd +23 dotfiles/aliases.zsh
badd +19 \[Vundle]\ Installer
badd +51 /private/var/folders/gp/zx_jdvz11tb4q2cxd75ch4lh0000gn/T/v6ISPlG/80
argglobal
silent! argdel *
edit Documents/Courses/MLT/8_Machine_Learning/Assignment\ 3/structured_perceptron.py
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 200 - ((27 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
200
normal! 0
lcd ~/dotfiles
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
